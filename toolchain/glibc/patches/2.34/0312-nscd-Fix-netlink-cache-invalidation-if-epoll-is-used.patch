From 2b3d020055bea4fbbfc0ca2362d46038487c6dfd Mon Sep 17 00:00:00 2001
From: Fabian Vogt <fvogt@suse.de>
Date: Wed, 27 Jul 2022 11:44:07 +0200
Subject: [PATCH 312/423] nscd: Fix netlink cache invalidation if epoll is used
 [BZ #29415]

Processes cache network interface information such as whether IPv4 or IPv6
are enabled. This is only checked again if the "netlink timestamp" provided
by nscd changed, which is triggered by netlink socket activity.

However, in the epoll handler for the netlink socket, it was missed to
assign the new timestamp to the nscd database. The handler for plain poll
did that properly, copy that over.

This bug caused that e.g. processes which started before network
configuration got unusuable addresses from getaddrinfo, like IPv6 only even
though only IPv4 is available:
https://gitlab.freedesktop.org/NetworkManager/NetworkManager/-/issues/1041

It's a bit hard to reproduce, so I verified this by checking the timestamp
on calls to __check_pf manually. Without this patch it's stuck at 1, now
it's increasing on network changes as expected.

Signed-off-by: Fabian Vogt <fvogt@suse.de>
(cherry picked from commit 02ca25fef2785974011e9c5beecc99b900b69fd7)
---
 NEWS               | 1 +
 nscd/connections.c | 3 ++-
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/NEWS b/NEWS
index ef7671b2f6..4a2531aa97 100644
--- a/NEWS
+++ b/NEWS
@@ -113,6 +113,7 @@ The following bugs are resolved with this release:
   [29211] libc: __open_catalog is not y2038 aware
   [29213] libc: gconv_parseconfdir is not y2038 aware
   [29214] nptl: pthread_setcanceltype fails to set type
+  [29415] nscd: Fix netlink cache invalidation if epoll is used
   [29446] _dlopen now ignores dl_caller argument in static mode
   [29490] alpha: New __brk_call implementation is broken
   [29528] elf: Call __libc_early_init for reused namespaces
diff --git a/nscd/connections.c b/nscd/connections.c
index 3f0bda4e97..bc941715cf 100644
--- a/nscd/connections.c
+++ b/nscd/connections.c
@@ -2285,7 +2285,8 @@ main_loop_epoll (int efd)
 					     sizeof (buf))) != -1)
 	      ;
 
-	    __bump_nl_timestamp ();
+	    dbs[hstdb].head->extra_data[NSCD_HST_IDX_CONF_TIMESTAMP]
+	      = __bump_nl_timestamp ();
 	  }
 # endif
 	else
-- 
2.30.2

