aarch64_initreg.c: In function 'aarch64_set_initial_registers_tid':
aarch64_initreg.c:61:24: error: storage size of 'pac_mask' isn't known
   61 |   struct user_pac_mask pac_mask;
      |                        ^~~~~~~~
aarch64_initreg.c:61:24: warning: unused variable 'pac_mask' [-Wunused-variable]

---

--- a/backends/aarch64_initreg.c
+++ b/backends/aarch64_initreg.c
@@ -36,7 +36,15 @@
 # include <sys/uio.h>
 # include <sys/user.h>
 # include <sys/ptrace.h>
+
+/* since Linux 5.0 */
+#ifndef LINUX_VERSION_CODE
+#include <linux/version.h>
+#endif
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
 # include <asm/ptrace.h>
+#endif /* since Linux 5.0 */
 /* Deal with old glibc defining user_pt_regs instead of user_regs_struct.  */
 # ifndef HAVE_SYS_USER_REGS
 #  define user_regs_struct user_pt_regs
@@ -58,17 +66,21 @@ aarch64_set_initial_registers_tid (pid_t
 
   /* General registers.  */
   struct user_regs_struct gregs;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
   struct user_pac_mask pac_mask;
+#endif /* since Linux 5.0 */
   struct iovec iovec;
   iovec.iov_base = &gregs;
   iovec.iov_len = sizeof (gregs);
   if (ptrace (PTRACE_GETREGSET, tid, NT_PRSTATUS, &iovec) != 0)
     return false;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
   iovec.iov_base = &pac_mask;
   iovec.iov_len = sizeof (pac_mask);
   if (ptrace (PTRACE_GETREGSET, tid, NT_ARM_PAC_MASK, &iovec) != 0)
     pac_mask.insn_mask = 0;
+#endif /* since Linux 5.0 */
 
   /* X0..X30 plus SP.  */
   if (! setfunc (0, 32, (Dwarf_Word *) &gregs.regs[0], arg))
@@ -78,8 +90,10 @@ aarch64_set_initial_registers_tid (pid_t
   if (! setfunc (-1, 1, (Dwarf_Word *) &gregs.pc, arg))
     return false;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
   if (! setfunc (-2, 1, (Dwarf_Word *) &pac_mask.insn_mask, arg))
     return false;
+#endif /* since Linux 5.0 */
 
   /* ELR cannot be found.  */
 
